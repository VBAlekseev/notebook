<Window x:Class="Notebook.NoteBookView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Notebook"
        
        mc:Ignorable="d"
        Title="NoteBookView" MaxHeight="450" MaxWidth="800"
        
        Background="Silver"
        >

   <Window.Resources>
      <Style x:Key="MyFontProperties">
         <Setter Property="Control.FontFamily" Value="Comic Sans MS" />
         <Setter Property="Control.FontSize" Value="13" />
         <Setter Property="Control.Margin" Value="5" />
      </Style>


      <Style TargetType="TextBlock" BasedOn = "{StaticResource MyFontProperties}"/>
      <Style TargetType="DataGrid" BasedOn = "{StaticResource MyFontProperties}"/>
      <Style TargetType="MenuItem" BasedOn = "{StaticResource MyFontProperties}"/>


      <Style TargetType="Button">
         <Setter Property="Control.HorizontalAlignment" Value="Center" />
         <Setter Property="Control.VerticalAlignment" Value="Center" />
         <Setter Property="Control.Height" Value="40"/>
         <Setter Property="Control.Width" Value="40"/>
         <Setter Property="Control.Padding" Value="2.5"/>
         <Setter Property="Control.Margin" Value="5" />
      </Style>

      <Style TargetType="Image">
         <Setter Property="Control.Height" Value="Auto"/>
         <Setter Property="Control.Width" Value="Auto"/>
      </Style>


      
      <ControlTemplate x:Key="validationFailed">
         <StackPanel Orientation="Horizontal">
            <Border BorderBrush="Violet" BorderThickness="3">
               <AdornedElementPlaceholder />
            </Border>
            <TextBlock Foreground="Red" FontSize="26" FontWeight="Bold">!</TextBlock>
         </StackPanel>
      </ControlTemplate>


      <Style TargetType="TextBox" BasedOn = "{StaticResource MyFontProperties}">
         <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
               <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
               <Setter Property="Foreground" Value="Red" />
            </Trigger>
         </Style.Triggers>
      </Style>

   </Window.Resources>


   <Grid>
      <Grid.RowDefinitions>
         <RowDefinition Height="Auto" />
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <WrapPanel Orientation="Vertical" Grid.Row="0" Height="Auto" HorizontalAlignment="Stretch">
        <Menu  Height="Auto" Width="789" VerticalAlignment="Center" HorizontalAlignment="Stretch">
            <MenuItem Header="Файл">
               <MenuItem Header="Открыть" Command="{Binding OpenCommand}"></MenuItem>
               <MenuItem Header="Сохранить как.." Command="{Binding SaveCommand}"></MenuItem>
               <Separator />
               <MenuItem Header="Exit" ></MenuItem>
            </MenuItem>
         </Menu>
      </WrapPanel>


      <WrapPanel Orientation="Horizontal" Grid.Row="1">
         <ToolBar Width="789">
            <WrapPanel Orientation ="Horizontal" Height="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
               <Button Name="Add" Command="{Binding AddPersonCommand}">
                  <Image Source="/Notebook;component/Miscellaneous/Icons/Add.png"/>
               </Button>

               <Button Name="Remove" Command="{Binding RemovePersonCommand}" CommandParameter="{Binding SelectedPerson}">
                  <Image Source="/Notebook;component/Miscellaneous/Icons/Remove.png"/>
               </Button>
                             
               <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Найти</TextBlock>

               <TextBox Name="Search" Height="30" Width="150" Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </WrapPanel>
         </ToolBar>
      </WrapPanel>



      <Grid Name="Main" Grid.Row="2" Height="Auto">
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="167*"/>
            <ColumnDefinition Width="97*"/>
            <ColumnDefinition Width="0*"/>
            <ColumnDefinition Width="132*"/>
         </Grid.ColumnDefinitions>


         <DataGrid Grid.Column="0" Grid.ColumnSpan="2"
               x:Name="dataGridName"
               Width="Auto"
               Height ="300"
               Margin="10,10,10,11"
               ItemsSource="{Binding Items}"
               SelectedItem="{Binding SelectedPerson}"
               AlternatingRowBackground="Silver"
               AutoGenerateColumns="False"
               CanUserAddRows="False"
               VerticalScrollBarVisibility="Auto"
               >

            <DataGrid.RowValidationRules>
               <DataErrorValidationRule ValidationStep="UpdatedValue"/>
            </DataGrid.RowValidationRules>

            <DataGrid.Columns>
               <DataGridTextColumn Header="Фамилия" Binding="{Binding Path=LastName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Width="0.25*" />
               <DataGridTextColumn Header="Имя" Binding="{Binding Path=FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Width="0.25*"/>
               <DataGridTextColumn Header="Год рождения" Binding="{Binding Path=Year, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Width="0.25*"/>
               <DataGridTextColumn Header="Телефон" Binding="{Binding Path=Phone, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Width="0.25*"/>
            </DataGrid.Columns>


            <DataGrid.CellStyle>
               <Style TargetType="{x:Type DataGridCell}">
                  <Style.Triggers>
                     <Trigger Property="DataGridCell.IsSelected" Value="true">
                        <Setter Property="Background" Value="Gray"/>
                     </Trigger>
                  </Style.Triggers>
               </Style>
            </DataGrid.CellStyle>
         </DataGrid>
         <GridSplitter  Width="3" Background="Black" VerticalAlignment="Stretch" Grid.Column="1"/>

         <StackPanel Grid.Column="3" DataContext="{Binding SelectedPerson}">
            <!--<TextBlock Text="Выбранный работник."  />-->
            <TextBlock Text="Фамилия:" />
            <TextBox Text="{Binding LastName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource validationFailed}" />
            <TextBlock Text="Имя:" />
            <TextBox Text="{Binding FirstName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource validationFailed}"/>
            <TextBlock Text="Год рождения:" />
            <TextBox Text="{Binding Year, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource validationFailed}"/>
            <TextBlock Text="Телефон:" />
            <TextBox Text="{Binding Phone, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" Validation.ErrorTemplate="{StaticResource validationFailed}"/>
         </StackPanel>
      </Grid>
   </Grid>
</Window>
